syntax = "proto3";

package torrenttomediaserver;

option go_package = "github.com/kkiling/torrent-to-media-server/api";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service TVShowLibraryService {
  rpc SearchTVShow(SearchTVShowRequest)  returns (SearchTVShowResponse) {
    option (google.api.http) = {
      get: "/v1/tvshow/search";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Поиск сериалов по названию";
    };
  };
  rpc GetTVShowsFromLibrary(GetTVShowsFromLibraryRequest)  returns (GetTVShowsFromLibraryResponse) {
    option (google.api.http) = {
      get: "/v1/tvshow/library";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Получение списка сериалов из библиотеки"
    };
  }
  rpc GetTVShowInfo(GetTVShowInfoRequest)  returns (GetTVShowInfoResponse) {
    option (google.api.http) = {
      get: "/v1/tvshow/info/{tv_show_id}";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Получение подробной информации о сериале"
    };
  };
  rpc GetSeasonEpisodes(GetSeasonEpisodesRequest)  returns (GetSeasonEpisodesResponse) {
    option (google.api.http) = {
      get: "/v1/tvshow/info/{tv_show_id}/{season_number}";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Получение информации о сериях сезона"
    };
  };
}

message Image {
  string id = 1;
  string w342 = 2;
  string original = 3;
}

message TVShowShort {
  uint64 id = 1;
  string name = 2;
  string original_name = 3;
  string overview = 4;
  optional Image poster = 5;
  google.protobuf.Timestamp first_air_date = 6;
  float vote_average = 7;
  uint32 vote_count = 8;
  float popularity = 9;
}

message TVShow {
  uint64 id = 1;
  string name = 2;
  string original_name = 3;
  string overview = 4;
  optional Image poster = 5;
  google.protobuf.Timestamp first_air_date = 6;
  float vote_average = 7;
  uint32 vote_count = 8;
  float popularity = 9;
  optional Image backdrop = 10;
  repeated string genres = 11;
  google.protobuf.Timestamp last_air_date = 12;
  google.protobuf.Timestamp next_episode_to_air = 13;
  uint32 number_of_episodes = 14;
  uint32 number_of_seasons = 15;
  repeated string origin_country = 16;
  string status = 17;
  string tagline = 18;
  string type = 19;
  repeated Season seasons = 20;
}

message Season {
  uint64 id = 1;
  google.protobuf.Timestamp air_date = 2;
  uint32 episode_count = 3;
  string name = 4;
  string overview = 5;
  optional Image poster = 6;
  uint32 season_number = 7;
  float vote_average = 8;
}

message Episode {
  uint64 id = 1;
  google.protobuf.Timestamp air_date = 2;
  uint32 episode_number = 3;
  string episode_type = 4;
  string name = 5;
  string overview = 6;
  uint32 runtime = 7;
  optional Image still = 8;
  float vote_average = 9;
  uint32 vote_count = 10;
}

message SearchTVShowRequest {
  string query = 1;
}

message SearchTVShowResponse {
  repeated TVShowShort items = 1;
}

message GetTVShowInfoRequest {
  uint64 tv_show_id = 1;
}

message GetTVShowInfoResponse {
  TVShow result = 1;
}

message GetSeasonEpisodesRequest {
  uint64 tv_show_id = 1;
  uint32 season_number = 2;
}

message GetSeasonEpisodesResponse {
  repeated Episode items = 1;
}

message GetTVShowsFromLibraryRequest {

}

message GetTVShowsFromLibraryResponse {
  repeated TVShowShort items = 1;
}